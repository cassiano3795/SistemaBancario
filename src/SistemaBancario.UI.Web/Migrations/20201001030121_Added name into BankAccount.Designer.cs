// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaBancario.Infra.Data.Context;

namespace SistemaBancario.UI.Web.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201001030121_Added name into BankAccount")]
    partial class AddednameintoBankAccount
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SistemaBancario.Domain.Models.BankAccountDailyInfoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("BalanceAtDate")
                        .HasColumnName("balance_at_date")
                        .HasColumnType("decimal(13, 7)");

                    b.Property<Guid>("BankAccountId")
                        .HasColumnName("bank_account_id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("IncomeBalance")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("income_balance")
                        .HasColumnType("decimal(13, 7)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("ReferenceDate")
                        .HasColumnName("reference_date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId", "ReferenceDate")
                        .IsUnique();

                    b.ToTable("bank_account_daily_info");
                });

            modelBuilder.Entity("SistemaBancario.Domain.Models.BankAccountModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("char(36)");

                    b.Property<int>("AccountNumber")
                        .HasColumnName("account_number")
                        .HasColumnType("int");

                    b.Property<ulong>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("bit")
                        .HasDefaultValue(1ul);

                    b.Property<int>("Agency")
                        .HasColumnName("agency")
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("balance")
                        .HasColumnType("decimal(13, 7)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("bank_account");
                });

            modelBuilder.Entity("SistemaBancario.Domain.Models.TransactionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("BankAccountId")
                        .HasColumnName("bank_account_id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("TransactionType")
                        .HasColumnName("transation_type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Value")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.ToTable("transaction");
                });

            modelBuilder.Entity("SistemaBancario.Domain.Models.BankAccountDailyInfoModel", b =>
                {
                    b.HasOne("SistemaBancario.Domain.Models.BankAccountModel", "BankAccount")
                        .WithMany("DailyInfos")
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SistemaBancario.Domain.Models.TransactionModel", b =>
                {
                    b.HasOne("SistemaBancario.Domain.Models.BankAccountModel", "BankAccount")
                        .WithMany("Transactions")
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
